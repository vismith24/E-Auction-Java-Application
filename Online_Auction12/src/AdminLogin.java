
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class AdminLogin extends javax.swing.JFrame {

    /**
     * Creates new form AdminLogin
     */
    public AdminLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("HOME");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 13, 40, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("CHECK WHO  Has  BID for what items:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, 20));

        jLabel3.setText("SELECT ITEM:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 110, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BMW i8 CAR", "SKODA RAPID CAR\t", "KTM DUKE BIKE", "YAMAHA FAZER BIKE", "ROLEX YATCHMASTER WATCH" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 107, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "USERNAME", "PHONENO", "CITY", "BIDAMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 390, 76));

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/31097664.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
         while(model.getRowCount()>0)
         {
             model.removeRow(0);
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
         int found=0;
                DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
                int a=jComboBox1.getSelectedIndex();
                while(model.getRowCount()>0)
         {
             model.removeRow(0);
         }
                try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/e_auction","root","root");
            Statement stmt=(Statement)con.createStatement();
            if(a==0)
            {
                String sql1="Select * from bmw_bid;";
            ResultSet rs=stmt.executeQuery(sql1);
            while(rs.next())
            {
                String name=rs.getString("Name");
                String unm=rs.getString("Username");
            String phn=rs.getString("Phoneno");
            String city=rs.getString("City");
            int amt=rs.getInt("Bidamount");
            model.addRow(new Object[]{name,unm,phn,city,amt});
            found++;
            }
            if(found==0)
            {
                JOptionPane.showMessageDialog(this,"No bid");
            }
            }
            else if(a==1)
            {
                String sql2="Select * from skoda_bid;";
            ResultSet rs=stmt.executeQuery(sql2);
            while(rs.next())
            {
                String name=rs.getString("Name");
                String unm=rs.getString("Username");
            String phn=rs.getString("Phoneno");
            String city=rs.getString("City");
            int amt=rs.getInt("Bidamount");
            model.addRow(new Object[]{name,unm,phn,city,amt});
            found++;
            }
            if(found==0)
            {
                JOptionPane.showMessageDialog(this,"No bid");
            }
            }
            else if(a==2)
            {
                String sql1="Select * from duke_bid;";
            ResultSet rs=stmt.executeQuery(sql1);
            while(rs.next())
            {
                String name=rs.getString("Name");
                String unm=rs.getString("Username");
            String phn=rs.getString("Phoneno");
            String city=rs.getString("City");
            int amt=rs.getInt("Bidamount");
            model.addRow(new Object[]{name,unm,phn,city,amt});
            found++;
            }
            if(found==0)
            {
                JOptionPane.showMessageDialog(this,"No bid");
            }
            }
            else if(a==3)
            {
                String sql1="Select * from yamaha_bid;";
            ResultSet rs=stmt.executeQuery(sql1);
            while(rs.next())
            {
                String name=rs.getString("Name");
                String unm=rs.getString("Username");
            String phn=rs.getString("Phoneno");
            String city=rs.getString("City");
            int amt=rs.getInt("Bidamount");
            model.addRow(new Object[]{name,unm,phn,city,amt});
            found++;
            }
            if(found==0)
            {
                JOptionPane.showMessageDialog(this,"No bid");
            }
            }
            else
            {
                String sql1="Select * from rolex_bid;";
            ResultSet rs=stmt.executeQuery(sql1);
            while(rs.next())
            {
                String name=rs.getString("Name");
                String unm=rs.getString("Username");
            String phn=rs.getString("Phoneno");
            String city=rs.getString("City");
            int amt=rs.getInt("Bidamount");
            model.addRow(new Object[]{name,unm,phn,city,amt});
            found++;
            }
            if(found==0)
            {
                JOptionPane.showMessageDialog(this,"No bid");
            }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2FocusGained

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formFocusGained

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        int found=0;
                DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
                try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/e_auction","root","root");
            Statement stmt=(Statement)con.createStatement();
                String sql1="Select * from bmw_bid;";
            ResultSet rs=stmt.executeQuery(sql1);
            while(rs.next())
            {
                String name=rs.getString("Name");
                String unm=rs.getString("Username");
            String phn=rs.getString("Phoneno");
            String city=rs.getString("City");
            int amt=rs.getInt("Bidamount");
            System.out.println(name+unm+phn+city+amt);
            model.addRow(new Object[]{name,unm,phn,city,amt});
            found++;
            }
            if(found==0)
            {
                JOptionPane.showMessageDialog(this,"No bid");
            }
                }
            catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
